
import com.bmuschko.gradle.docker.tasks.container.*
import com.bmuschko.gradle.docker.tasks.image.*
import org.lesscss.LessCompiler

/*
 * Gets the version name from the latest Git tag of the form V-X.Y where X and Y are version numbers
 */
def getVersionName = { ->
  def stdout = new ByteArrayOutputStream()
  exec {
    commandLine 'git', 'describe', '--tags', '--match', 'V-*.*'
    standardOutput = stdout
  }
  def v = stdout.toString().trim() =~ /V-(\d+)\.(\d+)(?:-(\d+)-)?/
  return v[0][1] + "." + v[0][2] + "." + (v[0][3] == null ? 0 : v[0][3])
}

buildscript {
  repositories {
    mavenCentral()
    jcenter()
  }

  dependencies {
    classpath "org.lesscss:lesscss:1.7.0.1.1"
    classpath 'com.github.docker-java:docker-java:2.2.3'
    classpath 'com.bmuschko:gradle-docker-plugin:2.6.7'
  }
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'maven'
apply plugin: 'jacoco'
apply plugin: 'com.bmuschko.docker-remote-api'
apply plugin: 'war'

sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
  mavenLocal()
  mavenCentral()
}

group = 'ch.kerbtier.dime2'
version = getVersionName()

configurations {
  exclude
}

test {
  useTestNG()
  
  testLogging {
    exceptionFormat = 'full'
  }
  
  maxHeapSize = '8m'
}

jacocoTestReport {
  reports {
    html.enabled true
  }
}

dependencies {
  compile project('dime2-core')
}


task lessCompile << {
  def compiler = new org.lesscss.LessCompiler()
  
  File base = file('src/main/webapp')
  fileTree(dir: base, include: '**/*.css').each {File css ->
    def rel = base.toURI().relativize(css.toURI()).toString()
    compiler.compile(css, file("build/less/" + rel + ".precompiled"))
  }
}

war {
  dependsOn lessCompile
  
  from 'build/less' 
}


task buildDockerfile(type: Dockerfile) {
  dependsOn war

  destFile = project.file('build/docker/Dockerfile')
  
  from 'jetty:9.3'
  maintainer 'chrigi@kerbtier.ch'
  
  instruction { 'LABEL ch.kerbtier=dime2'}
  
  copyFile 'ROOT.war', '/var/lib/jetty/webapps/ROOT.war'
  copyFile 'jetty-server.ini', '/var/lib/jetty/start.d/server.ini'
  
  runCommand 'apt-get update'
  
  defaultCommand("java","-Djava.io.tmpdir=/tmp/jetty", "-Xmx256M", "-jar","/usr/local/jetty/start.jar")
  
  doLast {
    copy {
      from war.archivePath
      into destFile.parent
      rename {'ROOT.war'}
    }
    copy {
      from 'config'
      into destFile.parent
    }
  }
}

task buildDockerImage(type: DockerBuildImage) {
  dependsOn buildDockerfile
  inputDir = buildDockerfile.destFile.parentFile
  tag = 'kerbtier/dime2'
}










