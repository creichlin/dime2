

/*
 * Gets the version name from the latest Git tag of the form V-X.Y where X and Y are version numbers
 */
def getVersionName = { ->
  def stdout = new ByteArrayOutputStream()
  exec {
    commandLine 'git', 'describe', '--tags', '--match', 'V-*.*'
    standardOutput = stdout
  }
  def v = stdout.toString().trim() =~ /V-(\d+)\.(\d+)(?:-(\d+)-)?/
  return v[0][1] + "." + v[0][2] + "." + (v[0][3] == null ? 0 : v[0][3])
}

buildscript {
  
  
  
  repositories {
    maven {
      mavenCentral()
      url "https://maven.eveoh.nl/content/repositories/releases"
    }
  }

  dependencies {
    classpath "nl.eveoh:gradle-aspectj:1.6"
    classpath "org.lesscss:lesscss:1.7.0.1.1"
  }
}

import org.lesscss.LessCompiler

allprojects {

  project.ext {
    aspectjVersion = '1.8.6'
  }
  
  apply plugin: 'java'
  apply plugin: 'eclipse'
  apply plugin: 'maven'
  apply plugin: 'jacoco'
  apply plugin: 'aspectj'

  sourceCompatibility = 1.7
  targetCompatibility = 1.7
  
  repositories {
    mavenLocal()
    mavenCentral()
  }

  group = 'ch.kerbtier.dime2'
  version = getVersionName()

  configurations {
    exclude
  }
  
  dependencies {
    compile('ch.kerbtier.webb:webb:0.1.+') {
      exclude group: 'org.apache.ant'
      exclude group: 'org.eclipse.jetty'
      exclude module: 'js'
    }
    
    compile 'ch.kerbtier.helene:helene:0.2.+'
    compile 'ch.kerbtier.amarillo:amarillo:0.1.+'
    compile 'org.pegdown:pegdown:1.5.0'
    runtime 'com.h2database:h2:1.4.188'
    
    aspectpath 'ch.kerbtier.esdi:esdi:0.1.+'
    
    testCompile 'org.testng:testng:6.9.6'
  }
  
  test {
    useTestNG()
    
    testLogging {
      exceptionFormat = 'full'
    }
    
    maxHeapSize = '8m'
  }
  

  jacocoTestReport {
    reports {
      html.enabled true
    }
  }
}

apply plugin: 'war'
apply from: 'https://raw.github.com/akhikhl/gretty/master/pluginScripts/gretty.plugin'


dependencies {
  compile project(':core')
}


task lessCompile << {
  def compiler = new org.lesscss.LessCompiler()
  
  File base = file('src/main/webapp')
  fileTree(dir: base, include: '**/*.css').each {File css ->
    println "lesscss " + css
    
    def rel = base.toURI().relativize(css.toURI()).toString()
    println rel
    
    compiler.compile(css, file("build/less/" + rel + ".precompiled"))
    
  }
}


war {
  dependsOn lessCompile
  
  from 'build/less' 
}


gretty {
  port = 8004
}

project(':core') {
  
  configurations {
    providedCompile
    compile.extendsFrom providedCompile
  }
  
  dependencies {
    providedCompile "javax.servlet:servlet-api:2.5"
  }
  
  jar {
    baseName = 'dime2-core'
    version = version
    manifest {
      attributes 'Implementation-Title': 'dime2-core', 'Implementation-Version': version
    }
  }
}